define(["exports","./ArcType-29cf2197","./arrayRemoveDuplicates-30a3675e","./Cartesian2-54f49cd5","./Cartographic-9ee1f1bd","./ComponentDatatype-c2578c27","./when-7d8885d2","./EllipsoidRhumbLine-fd512dba","./GeometryAttribute-84124076","./GeometryAttributes-2f749385","./GeometryPipeline-75c5111e","./IndexDatatype-6f66284e","./Math-4ffce144","./Matrix4-52faaaf8","./PolygonPipeline-d3f0dbfd","./PrimitiveType-3a37fdd9","./WindingOrder-f5e9946b"],(function(e,t,r,i,n,a,o,s,u,l,h,f,c,p,d,y,g){"use strict";function v(){this._array=[],this._offset=0,this._length=0}Object.defineProperties(v.prototype,{length:{get:function(){return this._length}}}),v.prototype.enqueue=function(e){this._array.push(e),this._length++},v.prototype.dequeue=function(){if(0!==this._length){var e=this._array,t=this._offset,r=e[t];return e[t]=void 0,++t>10&&2*t>e.length&&(this._array=e.slice(t),t=0),this._offset=t,this._length--,r}},v.prototype.peek=function(){if(0!==this._length)return this._array[this._offset]},v.prototype.contains=function(e){return-1!==this._array.indexOf(e)},v.prototype.clear=function(){this._array.length=this._offset=this._length=0},v.prototype.sort=function(e){this._offset>0&&(this._array=this._array.slice(this._offset),this._offset=0),this._array.sort(e)};var m={computeHierarchyPackedLength:function(e){for(var t=0,r=[e];r.length>0;){var i=r.pop();if(o.defined(i)){t+=2;var a=i.positions,s=i.holes;if(o.defined(a)&&(t+=a.length*n.Cartesian3.packedLength),o.defined(s))for(var u=s.length,l=0;l<u;++l)r.push(s[l])}}return t},packPolygonHierarchy:function(e,t,r){for(var i=[e];i.length>0;){var a=i.pop();if(o.defined(a)){var s=a.positions,u=a.holes;if(t[r++]=o.defined(s)?s.length:0,t[r++]=o.defined(u)?u.length:0,o.defined(s))for(var l=s.length,h=0;h<l;++h,r+=3)n.Cartesian3.pack(s[h],t,r);if(o.defined(u))for(var f=u.length,c=0;c<f;++c)i.push(u[c])}}return r},unpackPolygonHierarchy:function(e,t){for(var r=e[t++],i=e[t++],a=new Array(r),o=i>0?new Array(i):void 0,s=0;s<r;++s,t+=n.Cartesian3.packedLength)a[s]=n.Cartesian3.unpack(e,t);for(var u=0;u<i;++u)o[u]=m.unpackPolygonHierarchy(e,t),t=o[u].startingIndex,delete o[u].startingIndex;return{positions:a,holes:o,startingIndex:t}}},C=new n.Cartesian3;function b(e,t,r,i){return n.Cartesian3.subtract(t,e,C),n.Cartesian3.multiplyByScalar(C,r/i,C),n.Cartesian3.add(e,C,C),[C.x,C.y,C.z]}m.subdivideLineCount=function(e,t,r){var i=n.Cartesian3.distance(e,t)/r,a=Math.max(0,Math.ceil(c.CesiumMath.log2(i)));return Math.pow(2,a)};var w=new n.Cartographic,I=new n.Cartographic,T=new n.Cartographic,E=new n.Cartesian3;m.subdivideRhumbLineCount=function(e,t,r,i){var n=e.cartesianToCartographic(t,w),a=e.cartesianToCartographic(r,I),o=new s.EllipsoidRhumbLine(n,a,e).surfaceDistance/i,u=Math.max(0,Math.ceil(c.CesiumMath.log2(o)));return Math.pow(2,u)},m.subdivideLine=function(e,t,r,i){var a=m.subdivideLineCount(e,t,r),s=n.Cartesian3.distance(e,t),u=s/a;o.defined(i)||(i=[]);var l=i;l.length=3*a;for(var h=0,f=0;f<a;f++){var c=b(e,t,f*u,s);l[h++]=c[0],l[h++]=c[1],l[h++]=c[2]}return l},m.subdivideRhumbLine=function(e,t,r,i,n){var a=e.cartesianToCartographic(t,w),u=e.cartesianToCartographic(r,I),l=new s.EllipsoidRhumbLine(a,u,e),h=l.surfaceDistance/i,f=Math.max(0,Math.ceil(c.CesiumMath.log2(h))),p=Math.pow(2,f),d=l.surfaceDistance/p;o.defined(n)||(n=[]);var y=n;y.length=3*p;for(var g=0,v=0;v<p;v++){var m=l.interpolateUsingSurfaceDistance(v*d,T),C=e.cartographicToCartesian(m,E);y[g++]=C.x,y[g++]=C.y,y[g++]=C.z}return y};var P=new n.Cartesian3,x=new n.Cartesian3,_=new n.Cartesian3,A=new n.Cartesian3;m.scaleToGeodeticHeightExtruded=function(e,t,r,a,s){a=o.defaultValue(a,i.Ellipsoid.WGS84);var u=P,l=x,h=_,f=A;if(o.defined(e)&&o.defined(e.attributes)&&o.defined(e.attributes.position))for(var c=e.attributes.position.values,p=c.length/2,d=0;d<p;d+=3)n.Cartesian3.fromArray(c,d,h),a.geodeticSurfaceNormal(h,u),f=a.scaleToGeodeticSurface(h,f),l=n.Cartesian3.multiplyByScalar(u,r,l),l=n.Cartesian3.add(f,l,l),c[d+p]=l.x,c[d+1+p]=l.y,c[d+2+p]=l.z,s&&(f=n.Cartesian3.clone(h,f)),l=n.Cartesian3.multiplyByScalar(u,t,l),l=n.Cartesian3.add(f,l,l),c[d]=l.x,c[d+1]=l.y,c[d+2]=l.z;return e},m.polygonOutlinesFromHierarchy=function(e,t,i){var a,s,u,l=[],h=new v;for(h.enqueue(e);0!==h.length;){var f=h.dequeue(),c=f.positions;if(t)for(u=c.length,a=0;a<u;a++)i.scaleToGeodeticSurface(c[a],c[a]);if(!((c=r.arrayRemoveDuplicates(c,n.Cartesian3.equalsEpsilon,!0)).length<3)){var p=f.holes?f.holes.length:0;for(a=0;a<p;a++){var d=f.holes[a],y=d.positions;if(t)for(u=y.length,s=0;s<u;++s)i.scaleToGeodeticSurface(y[s],y[s]);if(!((y=r.arrayRemoveDuplicates(y,n.Cartesian3.equalsEpsilon,!0)).length<3)){l.push(y);var g=0;for(o.defined(d.holes)&&(g=d.holes.length),s=0;s<g;s++)h.enqueue(d.holes[s])}}l.push(c)}}return l};var M=new n.Cartesian3(6378137,6378137,6378137);m.polygonsFromHierarchy=function(e,t,i,a){var s=[],u=[],l=new v;for(l.enqueue(e);0!==l.length;){var h,f,p,y=l.dequeue(),m=y.positions,C=y.holes,b=m.slice();if(i)for(f=m.length,h=0;h<f;h++)a.scaleToGeodeticSurface(m[h],b[h]);if(o.defined(a)&&!n.Cartesian3.equals(a._radii,M)&&(p=c.CesiumMath.EPSILON7),!((m=r.arrayRemoveDuplicates(b,n.Cartesian3.equalsEpsilon,!0,p)).length<3)){var w=t(m);if(o.defined(w)){var I=[],T=d.PolygonPipeline.computeWindingOrder2D(w);T===g.WindingOrder.CLOCKWISE&&(w.reverse(),m=m.slice().reverse());var E,P=m.slice(),x=o.defined(C)?C.length:0,_=[];for(h=0;h<x;h++){var A=C[h],L=A.positions;if(i)for(f=L.length,E=0;E<f;++E)a.scaleToGeodeticSurface(L[E],L[E]);if(!((L=r.arrayRemoveDuplicates(L,n.Cartesian3.equalsEpsilon,!0,c.CesiumMath.EPSILON7)).length<3)){var G=t(L);if(o.defined(G)){(T=d.PolygonPipeline.computeWindingOrder2D(G))===g.WindingOrder.CLOCKWISE&&(G.reverse(),L=L.slice().reverse()),_.push(L),I.push(P.length),P=P.concat(L),w=w.concat(G);var S=0;for(o.defined(A.holes)&&(S=A.holes.length),E=0;E<S;E++)l.enqueue(A.holes[E])}}}s.push({outerRing:m,holes:_}),u.push({positions:P,positions2D:w,holes:I})}}}return{hierarchy:s,polygons:u}};var L=new i.Cartesian2,G=new n.Cartesian3,S=new u.Quaternion,D=new p.Matrix3;m.computeBoundingRectangle=function(e,t,r,i,a){for(var s=u.Quaternion.fromAxisAngle(e,i,S),l=p.Matrix3.fromQuaternion(s,D),h=Number.POSITIVE_INFINITY,f=Number.NEGATIVE_INFINITY,c=Number.POSITIVE_INFINITY,d=Number.NEGATIVE_INFINITY,y=r.length,g=0;g<y;++g){var v=n.Cartesian3.clone(r[g],G);p.Matrix3.multiplyByVector(l,v,v);var m=t(v,L);o.defined(m)&&(h=Math.min(h,m.x),f=Math.max(f,m.x),c=Math.min(c,m.y),d=Math.max(d,m.y))}return a.x=h,a.y=c,a.width=f-h,a.height=d-c,a},m.createGeometryFromPositions=function(e,r,i,n,o,s){var l=d.PolygonPipeline.triangulate(r.positions2D,r.holes);l.length<3&&(l=[0,1,2]);var f=r.positions;if(n){for(var c=f.length,p=new Array(3*c),g=0,v=0;v<c;v++){var m=f[v];p[g++]=m.x,p[g++]=m.y,p[g++]=m.z}var C=new u.Geometry({attributes:{position:new u.GeometryAttribute({componentDatatype:a.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:p})},indices:l,primitiveType:y.PrimitiveType.TRIANGLES});return o.normal?h.GeometryPipeline.computeNormal(C):C}return s===t.ArcType.GEODESIC?d.PolygonPipeline.computeSubdivision(e,f,l,i):s===t.ArcType.RHUMB?d.PolygonPipeline.computeRhumbLineSubdivision(e,f,l,i):void 0};var N=[],O=new n.Cartesian3,R=new n.Cartesian3;m.computeWallGeometry=function(e,r,i,o,s){var h,p,d,g,v,C=e.length,b=0;if(o)for(p=3*C*2,h=new Array(2*p),d=0;d<C;d++)g=e[d],v=e[(d+1)%C],h[b]=h[b+p]=g.x,h[++b]=h[b+p]=g.y,h[++b]=h[b+p]=g.z,h[++b]=h[b+p]=v.x,h[++b]=h[b+p]=v.y,h[++b]=h[b+p]=v.z,++b;else{var w=c.CesiumMath.chordLength(i,r.maximumRadius),I=0;if(s===t.ArcType.GEODESIC)for(d=0;d<C;d++)I+=m.subdivideLineCount(e[d],e[(d+1)%C],w);else if(s===t.ArcType.RHUMB)for(d=0;d<C;d++)I+=m.subdivideRhumbLineCount(r,e[d],e[(d+1)%C],w);for(p=3*(I+C),h=new Array(2*p),d=0;d<C;d++){var T;g=e[d],v=e[(d+1)%C],s===t.ArcType.GEODESIC?T=m.subdivideLine(g,v,w,N):s===t.ArcType.RHUMB&&(T=m.subdivideRhumbLine(r,g,v,w,N));for(var E=T.length,P=0;P<E;++P,++b)h[b]=T[P],h[b+p]=T[P];h[b]=v.x,h[b+p]=v.x,h[++b]=v.y,h[b+p]=v.y,h[++b]=v.z,h[b+p]=v.z,++b}}C=h.length;var x=f.IndexDatatype.createTypedArray(C/3,C-6*e.length),_=0;for(C/=6,d=0;d<C;d++){var A=d,M=A+1,L=A+C,G=L+1;g=n.Cartesian3.fromArray(h,3*A,O),v=n.Cartesian3.fromArray(h,3*M,R),n.Cartesian3.equalsEpsilon(g,v,c.CesiumMath.EPSILON10,c.CesiumMath.EPSILON10)||(x[_++]=A,x[_++]=L,x[_++]=M,x[_++]=M,x[_++]=L,x[_++]=G)}return new u.Geometry({attributes:new l.GeometryAttributes({position:new u.GeometryAttribute({componentDatatype:a.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:h})}),indices:x,primitiveType:y.PrimitiveType.TRIANGLES})},e.PolygonGeometryLibrary=m}));
